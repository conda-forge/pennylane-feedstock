{% set name = "pennylane" %}
{% set version = "0.33.1" %}
{% set build_num = 3 %}

package:
  name: pennylane-suite
  version: {{ version }}

source:
  - url: https://github.com/PennyLaneAI/pennylane/archive/refs/tags/v{{ version }}.tar.gz
    sha256: 89d02bfe3a37abd13dcdb2f34f00a38e9e60a13af66a97911c8558f77ff4e32e
    folder: pennylane
  - url: https://github.com/PennyLaneAI/pennylane-lightning/archive/refs/tags/v{{ version }}.tar.gz
    sha256: 878f63cd1afadd52386b1aca9c0e3fb0a097b64ce8e347b325ebc7cac722e5e0
    folder: pennylane-lightning

build:
  number: {{ build_num }}

requirements:
  host:
    - pip
    - python

outputs:
  - name: pennylane-core
    build:
      number: {{ build_num }}
      skip: true  # [win]
      run_exports:
        - {{ pin_subpackage('pennylane-core', max_pin='x.x.x') }}
      entry_points:
        - pl-device-test=pennylane.devices.tests:cli
      script: cd "${SRC_DIR}/pennylane" && {{ PYTHON }} -m pip install . --no-deps -vv
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
      host:
        - pip
        - python
      run:
        - appdirs
        - autograd
        - autoray >=0.6.1
        - cachetools
        - networkx
        - numpy
        - python
        - requests
        - rustworkx
        - scipy
        - semantic_version >=2.7
        - toml
        - typing_extensions
      run_constrained:
        - pennylane >=0.30.0
    test:
      imports:
        - pennylane
      requires:
        - setuptools
        - pip

  - name: pennylane-lightning-core
    build:
      number: {{ build_num }}
      skip: true  # [win]
      run_exports:
        - {{ pin_subpackage('pennylane-lightning-core', max_pin='x.x.x') }}
      script:
        - cd "${SRC_DIR}/pennylane-lightning"
        - {{ PYTHON }} setup.py build_ext --define="ENABLE_BLAS=ON;ENABLE_OPENMP=ON"  # [not osx or build_platform == target_platform]
        - {{ PYTHON }} setup.py build_ext --define="ENABLE_BLAS=ON;ENABLE_OPENMP=ON;CMAKE_CXX_COMPILER_TARGET=arm64-apple-macos11;CMAKE_SYSTEM_NAME=Darwin;CMAKE_SYSTEM_PROCESSOR=ARM64"  # [osx and build_platform != target_platform]
        - {{ PYTHON }} setup.py bdist_wheel
        - {{ PYTHON }} -m pip install . --no-deps -vv

    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - pybind11                               # [build_platform != target_platform]
        # Needed for Windows
        - cmake
        - ninja
        - make
      host:
        - libcblas
        - libgomp               # [linux]
        - llvm-openmp >=16.0.3  # [osx]
        - pip
        - pybind11
        - python
        - setuptools
        - ninja
      run:
        - ninja
        - numpy
        - python
        - {{ pin_subpackage('pennylane-core') }}
      run_constrained:
        - pennylane-lightning <0.0a0
    test:
      imports:
        - pennylane_lightning
      requires:
        - setuptools
        - pip

  - name: pennylane
    build:
      number: {{ build_num }}
      skip: true  # [win]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('pennylane-core', max_pin="x.x.x") }}
        - {{ pin_subpackage('pennylane-lightning-core', max_pin="x.x.x") }}
    test:
      imports:
        - pennylane
        - pennylane_lightning
      commands:
        - pypy --version 2> /dev/null || echo Using Python to run tests
        - pypy -c "import pennylane as qml; qml.about()" 2> /dev/null || echo PyPy not found
        - python -c "import pennylane as qml; qml.about()"
        - pip check
        - pl-device-test --help
        - pl-device-test --device lightning.qubit --shots None --skip-ops
        - pl-device-test --device lightning.qubit --shots 10000 --skip-ops
      requires:
        - setuptools
        - flaky
        - pip
        - pytest
        - pytest-mock

about:
  home: https://github.com/PennyLaneAI/pennylane
  summary: PennyLane is a Python quantum machine learning library by Xanadu Inc.
  license: Apache-2.0 AND MIT
  # MIT is pennylane/grouping/graph_colouring.py
  license_file: pennylane/LICENSE
  doc_url: https://pennylane.readthedocs.io/en/stable/

extra:
  recipe-maintainers:
    - leofang
    - vincentmr
    - BastianZim
  feedstock-name: pennylane
